components_configurations_folder: ~/w/catkin_ws/src/global_planning_performance_modelling/config/component_configurations

run_timeout : 36000.0

sbpl_primitives_path: ~/w/catkin_ws/src/global_planning_performance_modelling/primitives

supervisor_component: global_planning_benchmark_supervisor

components_configuration:
  supervisor: global_planning_benchmark_supervisor/global_planning_benchmark_supervisor.yaml
  move_base: move_base/move_base_tb3.yaml
  move_base_global_planner: move_base/move_base_global_planner_ros.yaml
  move_base_sbpl_planner: move_base/move_base_sbpl_lattice_planner.yaml
  move_base_ompl_planner: move_base/move_base_ompl_global_planner.yaml
  rviz: rviz/default_view.rviz

#you can write your combinatorial parameters here as an dict in grid_benchmarking.py is taking them
combinatorial_parameters: [
  {
    global_planner_name: [GlobalPlanner],
    use_dijkstra: [true, false],
    lethal_cost: [50, 100, 253],
  },
  {
    global_planner_name: [OmplGlobalPlanner],
    planner_type: [RRTStar, RRTConnect, PRMStar],
    lethal_cost: [50, 100, 253]
  },
  { 
    global_planner_name: [SBPLLatticePlanner],
    sbpl_primitives_name: [genmprim_unicycle_16_prim7_10.mprim, genmprim_unicycle_16_prim9_10.mprim, genmprim_unicycle_16_prim11_10.mprim],
    planner_type: [ADPlanner, ARAPlanner],
  },
  { 
    global_planner_name: [SBPLLatticePlanner],
    sbpl_primitives_name: [matteo_mprim_16_10deg_10_version3.mprim, matteo_mprim_16_20deg_10_version3.mprim, matteo_mprim_16_35deg_10_version3.mprim, matteo_mprim_16_90deg_10_version3.mprim],
    planner_type: [ADPlanner, ARAPlanner],
  },  
  

]
